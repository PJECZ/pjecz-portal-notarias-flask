{% extends 'layouts/app.jinja2' %}
{% import 'macros/card.jinja2' as card %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}{{ titulo }}{% endblock %}

{% block custom_head %}
    <!-- DataTables.net buttons -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.dataTables.min.css">
{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons(titulo) %}
        {{ topbar.button_list_active('Listado', url_for('edictos.list_active')) }}
    {% endcall %}
{% endblock %}

{% block content %}
    {# DataTableEdictos #}
    {% call card.card() %}
        {% call card.card_body() %}
            <table id="edictos_datatable" class="table {% if estatus == 'B' %}table-dark{% endif %} display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Descripción</th>
                        <th>No. Publicación</th>
                        <th>URL Descarga pública</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endcall %}
{% endblock %}

{% block custom_javascript %}
    <!-- DataTables.net buttons -->
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.7/pdfmake.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/datatables-buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/datatables-buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/datatables-buttons/2.4.1/js/buttons.print.min.js"></script>
    
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        // Definir el constructor para DataTables
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    <!-- DataTable Edictos -->
    <script>
        // DataTable Edictos
        let configDTEdictos = constructorDataTable.config();
        configDTEdictos['dom'] = 'Bfrtip';
        configDTEdictos['buttons'] = [
            { extend: 'copy', text: 'Copiar' },
            { extend: 'csvHtml5', text: 'Descargar CSV' },
            { extend: 'excelHtml5', text: 'Descargar XLSX' }
        ];
        configDTEdictos['ajax']['url'] = '/edictos/datatable_json';
        configDTEdictos['ajax']['data'] =  {{ filtros }};
        configDTEdictos['columns'] = [
            { data: "fecha" },
            { data: "detalle" },
            { data: "numero_publicacion" },
            { data: "archivo" },
        ];
        configDTEdictos['columnDefs'] = [
            {
                targets: 0, // fecha
                data: null,
                render: function(data, type, row, meta) {
                    return moment(data).format("DD MMM YYYY");
                }
            },
            {
                targets: 1, // descripcion (detalle)
                data: null,
                render: function(data, type, row, meta) {
                    var descripcion = data.descripcion.length > 80 ? data.descripcion.substr(0, 80) + '…' : data.descripcion;
                    var content = data.url ? '<a href="' + data.url + '">' + descripcion + '</a>' : descripcion;
                    if (data.url) {
                        return '<span title="' + descripcion + '">' + content + '</span>';
                    } else {
                        return descripcion;
                    }
                }
            },
            {
                targets: 3, // descargar_url "URL Descarga pública"
                data: null,
                render: function(data, type, row, meta) {
                    return '<a href="' + data.descargar_url + '" target="_blank">' + data.descargar_url +'</a>';
                }
            }
        ];
        // Filtros Edictos 
        const filtrosEdictos = new FiltrosDataTable('#edictos_datatable', configDTEdictos);
        filtrosEdictos.agregarInput('filtroEdictosDescripcion', 'descripcion');
        filtrosEdictos.precargar();
    </script>
{% endblock %}
